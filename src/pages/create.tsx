import Link from "next/link";
import Head from "next/head";
import React, { useState } from "react";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { IUser } from "@/interfaces/IUser";
import { useCreateUser } from "@/hooks/useUser";

const inter = Inter({ subsets: ["latin"] });

export default function Edit() {
  const createUserMutation = useCreateUser(); // Hook de criação de User
  const [user, setUser] = useState<IUser>({
    name: "",
    email: "",
    password: "",
  });

  // Pegando todos os valores digitados
  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {
    const { name, value } = e.target;
    setUser((prevState) => ({
      ...prevState,
      [name]: value,
    }));
  }

  // Enviando todos os dados atualizados para Hook de cadastro
  async function handleSubmit(e: React.FormEvent) {
    e.preventDefault();
    const userAtualizado: IUser = {
      name: user.name,
      email: user.email,
      password: user.password,
    };
    useCreateUser;
    createUserMutation.mutate(userAtualizado);
  }
  return (
    <React.Fragment>
      <Head>
        <title>React Query - Cadastro</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div className={styles.center}>
          <h1> Example the of React Query</h1>
        </div>

        <div className="align-items-center">
          <div className="row">
            <p style={{ color: "#4a5768ae" }}>Página de cadastro de User</p>
          </div>
        </div>

        <div className="row">
          <div className="col-md-12">
            <form className="row g-3" onSubmit={handleSubmit}>
              <div className="col-md-12 mb-2">
                <label htmlFor="inputNome" className="form-label">
                  Nome
                </label>
                <input
                  type="text"
                  className="form-control"
                  placeholder="Digite o nome"
                  id="inputNome"
                  name="name"
                  value={user.name.toString()}
                  onChange={handleChange}
                />
              </div>
              <div className="col-md-12 mb-2">
                <label htmlFor="inputNome" className="form-label">
                  Email
                </label>
                <input
                  type="text"
                  className="form-control"
                  placeholder="Digite o email"
                  id="inputNome"
                  name="email"
                  value={user.email.toString()}
                  onChange={handleChange}
                />
              </div>
              <div className="col-md-12 mb-2">
                <label htmlFor="inputNome" className="form-label">
                  Password
                </label>
                <input
                  type="text"
                  className="form-control"
                  placeholder="Digite a senha"
                  id="inputNome"
                  name="password"
                  value={user.password.toString()}
                  onChange={handleChange}
                />
              </div>

              <div className="d-grid gap-2 d-md-flex justify-content-md-end">
                <button className="btn btn-secondary" type="button">
                  <Link href={"/"}>Voltar</Link>
                </button>
                <button className="btn btn-primary" type="submit">
                  Cadastrar
                </button>
              </div>
            </form>
          </div>
        </div>
      </main>
    </React.Fragment>
  );
}
